#
#  TACACS+ policies which make everything better.
#

tacacs_set_authentication_status {
	if (ok) {
		&reply.Authentication-Status = Pass
	} else {
		&reply.Authentication-Status = Fail
	}
}

tacacs_pap {
	subrequest RADIUS.Access-Request {
		&request.User-Name := &parent.request.User-Name
		&request.User-Password := &parent.request.User-Password
		&control.Password.Cleartext := &parent.control.Password.Cleartext

		pap.authorize
		pap.authenticate
	}

	tacacs_set_authentication_status
}

tacacs_chap {
	subrequest RADIUS.Access-Request {
		&request.User-Name := &parent.request.User-Name

		#
		#  Data length N is 1 octet of ID, followed by
		#  N-17 octets of challenge, followed by 16 octets of
		#  CHAP-Password.
		#
		#  @todo - update code to create these, so that the
		#  poor user doesn't need to.
		#
		&request.CHAP-Password := &parent.request.CHAP-Password
		&request.CHAP-Challenge := &parent.request.CHAP-Challenge
		&control.Password.Cleartext := &parent.control.Password.Cleartext

		chap.authenticate
	}

	tacacs_set_authentication_status
}

tacacs_mschap {
	subrequest RADIUS.Access-Request {
		&request.User-Name := &parent.request.User-Name

		&control.Password.Cleartext := &parent.control.Password.Cleartext

		#
		#  There's always a challenge
		#
		&request.Vendor-Specific.Microsoft.CHAP-Challenge := &parent.request.MS-CHAP-Challenge

		#
		#  One of these two assignments will fail.  Using "+="
		#  is simpler than checking for it via "if" and then using ":="
		#
		&request.Vendor-Specific.Microsoft.CHAP-Response := &parent.request.MS-CHAP-Response
		&request.Vendor-Specific.Microsoft.CHAP2-Response := &parent.request.MS-CHAP2-Response

		mschap.authenticate
	}

	tacacs_set_authentication_status
}